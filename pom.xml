<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
				 xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>3.3.5</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>
	<groupId>com.github.overz</groupId>
	<artifactId>spring-camel</artifactId>
	<version>0.0.1</version>
	<name>spring-camel</name>
	<description>spring-camel</description>

	<properties>
		<java.version>21</java.version>
		<spring-cloud.version>2023.0.3</spring-cloud.version>
		<mapstruct.version>1.6.2</mapstruct.version>
		<springdoc.version>2.6.0</springdoc.version>
		<openapi-gen.version>7.9.0</openapi-gen.version>
		<camel.version>4.8.1</camel.version>
		<resources.path>${project.basedir}/src/main/resources</resources.path>
		<openapi.path>${resources.path}/openapi</openapi.path>
		<package>${project.groupId}</package>
	</properties>

	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-dependencies</artifactId>
				<version>${project.parent.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
			<dependency>
				<groupId>org.apache.camel</groupId>
				<artifactId>camel-bom</artifactId>
				<version>${camel.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
			<dependency>
				<groupId>org.apache.camel.springboot</groupId>
				<artifactId>camel-spring-boot-bom</artifactId>
				<version>${camel.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
			<dependency>
				<groupId>org.springframework.cloud</groupId>
				<artifactId>spring-cloud-dependencies</artifactId>
				<version>${spring-cloud.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-actuator</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-redis</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-validation</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-circuitbreaker-resilience4j</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-openfeign</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-devtools</artifactId>
			<scope>runtime</scope>
			<optional>true</optional>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-docker-compose</artifactId>
			<scope>runtime</scope>
			<optional>true</optional>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-configuration-processor</artifactId>
			<optional>true</optional>
		</dependency>
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<optional>true</optional>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.restdocs</groupId>
			<artifactId>spring-restdocs-mockmvc</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>io.github.cdimascio</groupId>
			<artifactId>java-dotenv</artifactId>
			<version>5.2.2</version>
		</dependency>
		<dependency>
			<groupId>org.mapstruct</groupId>
			<artifactId>mapstruct</artifactId>
			<version>${mapstruct.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springdoc</groupId>
			<artifactId>springdoc-openapi-starter-webmvc-ui</artifactId>
			<version>${springdoc.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springdoc</groupId>
			<artifactId>springdoc-openapi-starter-webmvc-api</artifactId>
			<version>${springdoc.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springdoc</groupId>
			<artifactId>springdoc-openapi-starter-common</artifactId>
			<version>${springdoc.version}</version>
		</dependency>

		<!-- CAMEL -->
		<dependency>
			<groupId>org.apache.camel</groupId>
			<artifactId>camel-core</artifactId>
		</dependency>
		<dependency>
			<groupId>org.apache.camel</groupId>
			<artifactId>camel-rest-openapi</artifactId>
		</dependency>
		<dependency>
			<groupId>org.apache.camel</groupId>
			<artifactId>camel-openapi-java</artifactId>
		</dependency>
		<dependency>
			<groupId>org.apache.camel</groupId>
			<artifactId>camel-openapi-validator</artifactId>
		</dependency>
		<dependency>
			<groupId>org.apache.camel</groupId>
			<artifactId>camel-jackson</artifactId>
		</dependency>
		<dependency>
			<groupId>org.apache.camel</groupId>
			<artifactId>camel-servlet</artifactId>
		</dependency>
		<dependency>
			<groupId>org.apache.camel</groupId>
			<artifactId>camel-resilience4j</artifactId>
		</dependency>

		<!-- CAMEL SPRING -->
		<dependency>
			<groupId>org.apache.camel.springboot</groupId>
			<artifactId>camel-jackson-starter</artifactId>
		</dependency>
		<dependency>
			<groupId>org.apache.camel.springboot</groupId>
			<artifactId>camel-servlet-starter</artifactId>
		</dependency>
		<dependency>
			<groupId>org.apache.camel.springboot</groupId>
			<artifactId>camel-spring-boot-starter</artifactId>
		</dependency>
		<dependency>
			<groupId>org.apache.camel.springboot</groupId>
			<artifactId>camel-dataformat-starter</artifactId>
		</dependency>
		<dependency>
			<groupId>org.apache.camel.springboot</groupId>
			<artifactId>camel-log-starter</artifactId>
		</dependency>
		<dependency>
			<groupId>org.apache.camel.springboot</groupId>
			<artifactId>camel-openapi-java-starter</artifactId>
		</dependency>
		<dependency>
			<groupId>org.apache.camel.springboot</groupId>
			<artifactId>camel-resilience4j-starter</artifactId>
		</dependency>
		<dependency>
			<groupId>org.apache.camel.springboot</groupId>
			<artifactId>camel-springdoc-starter</artifactId>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.graalvm.buildtools</groupId>
				<artifactId>native-maven-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>org.asciidoctor</groupId>
				<artifactId>asciidoctor-maven-plugin</artifactId>
				<version>2.2.1</version>
				<executions>
					<execution>
						<id>generate-docs</id>
						<phase>prepare-package</phase>
						<goals>
							<goal>process-asciidoc</goal>
						</goals>
						<configuration>
							<backend>html</backend>
							<doctype>book</doctype>
						</configuration>
					</execution>
				</executions>
				<dependencies>
					<dependency>
						<groupId>org.springframework.restdocs</groupId>
						<artifactId>spring-restdocs-asciidoctor</artifactId>
						<version>${spring-restdocs.version}</version>
					</dependency>
				</dependencies>
			</plugin>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<configuration>
					<excludes>
						<exclude>
							<groupId>org.projectlombok</groupId>
							<artifactId>lombok</artifactId>
						</exclude>
					</excludes>
				</configuration>
			</plugin>

			<!-- COMPILER CONFIGURATION PROCESSOR -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.13.0</version>
				<configuration>
					<proc>full</proc>
					<source>${java.version}</source>
					<target>${java.version}</target>
					<annotationProcessorPaths>
						<path>
							<groupId>org.mapstruct</groupId>
							<artifactId>mapstruct-processor</artifactId>
							<version>${mapstruct.version}</version>
						</path>
						<path>
							<groupId>org.projectlombok</groupId>
							<artifactId>lombok</artifactId>
							<version>${lombok.version}</version>
						</path>
						<path>
							<groupId>org.projectlombok</groupId>
							<artifactId>lombok-mapstruct-binding</artifactId>
							<version>0.2.0</version>
						</path>
						<!-- other annotation processors -->
					</annotationProcessorPaths>
				</configuration>
			</plugin>

			<!-- SWAGGER CODE GENERATION -->
			<plugin>
				<groupId>org.openapitools</groupId>
				<artifactId>openapi-generator-maven-plugin</artifactId>
				<version>${openapi-gen.version}</version>
				<executions>
					<execution>
						<id>openapi-codegen-${project.artifactId}</id>
						<phase>generate-sources</phase>
						<goals>
							<goal>generate</goal>
						</goals>
						<configuration>
							<generatorName>java-camel</generatorName>
							<inputSpec>${openapi.path}/${project.artifactId}.yaml</inputSpec>
							<templateResourcePath>${resources.path}/templates/camel</templateResourcePath>

							<generateSupportingFiles>true</generateSupportingFiles>
							<supportingFilesToGenerate>RestConfiguration.java</supportingFilesToGenerate>

							<generateModels>true</generateModels>
							<modelNameSuffix>DTO</modelNameSuffix>
							<generateModelTests>false</generateModelTests>

							<generateApis>true</generateApis>
							<apiNameSuffix>Router</apiNameSuffix>
							<generateApiTests>false</generateApiTests>
							<generateApiDocumentation>false</generateApiDocumentation>

							<configOptions>
								<basePackage>${project.groupId}.camel</basePackage>
								<apiPackage>${project.groupId}.camel</apiPackage>
								<modelPackage>${project.groupId}.camel.dto</modelPackage>
								<configPackage>${project.groupId}.camel.configs</configPackage>
								<documentationProvider>springdoc</documentationProvider>
								<openApiNullable>false</openApiNullable>
								<useJakartaEe>true</useJakartaEe>
								<dateLibrary>java8</dateLibrary>
								<useBeanValidation>true</useBeanValidation>
								<serializableModel>true</serializableModel>
								<useTags>true</useTags>
								<additionalModelTypeAnnotations>
									@lombok.experimental.FieldNameConstants
								</additionalModelTypeAnnotations>
								<camelRestClientRequestValidation>true</camelRestClientRequestValidation>
							</configOptions>
						</configuration>
					</execution>
					<execution>
						<id>openapi-codegen-spring-thymeleaf</id>
						<phase>generate-sources</phase>
						<goals>
							<goal>generate</goal>
						</goals>
						<configuration>
							<generatorName>java</generatorName>
							<library>resttemplate</library>

							<inputSpec>${openapi.path}/clients/spring-thymeleaf.yaml</inputSpec>

							<generateSupportingFiles>true</generateSupportingFiles>
							<supportingFilesToGenerate>
								BaseApi.java,ApiClient.java,ApiException.java,ApiResponse.java,Authentication.java,JavaTimeFormatter.java,RFC3339DateFormat.java,ApiKeyAuth.java,HttpBasicAuth.java,OAuth.java
							</supportingFilesToGenerate>

							<generateModels>true</generateModels>
							<modelNameSuffix>DTO</modelNameSuffix>
							<generateModelTests>false</generateModelTests>

							<generateApis>true</generateApis>
							<apiNameSuffix>Api</apiNameSuffix>
							<generateApiTests>false</generateApiTests>
							<generateApiDocumentation>false</generateApiDocumentation>

							<configOptions>
								<basePackage>${project.groupId}.thymeleaf</basePackage>
								<apiPackage>${project.groupId}.thymeleaf</apiPackage>
								<modelPackage>${project.groupId}.thymeleaf.dto</modelPackage>
								<configPackage>${project.groupId}.thymeleaf.configs</configPackage>
								<openApiNullable>false</openApiNullable>
								<useJakartaEe>true</useJakartaEe>
								<dateLibrary>java8</dateLibrary>
								<useBeanValidation>true</useBeanValidation>
								<serializableModel>true</serializableModel>
								<useTags>true</useTags>
								<additionalModelTypeAnnotations>
									@lombok.experimental.FieldNameConstants
								</additionalModelTypeAnnotations>
							</configOptions>
						</configuration>
					</execution>
				</executions>
			</plugin>

		</plugins>
	</build>

</project>
